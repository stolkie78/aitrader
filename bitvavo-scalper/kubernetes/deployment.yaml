# Deployment voor BTC-EUR
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-bot-btc-eur
  labels:
    app: trading-bot
    crypto: btc-eur
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trading-bot
      crypto: btc-eur
  template:
    metadata:
      labels:
        app: trading-bot
        crypto: btc-eur
    spec:
      containers:
      - name: trading-bot-container
        image: bitvavo-scalper:latest # Vervang dit door je eigen image
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /app/config.json
          name: config-volume
          subPath: BTC-EUR.json
        - mountPath: /app/data
          name: data-volume
        env:
        - name: CONFIG_FILE
          value: "/app/config.json"
      volumes:
      - name: config-volume
        configMap:
          name: trading-bot-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: trading-bot-data
---

# Deployment voor SOL-EUR
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-bot-sol-eur
  labels:
    app: trading-bot
    crypto: sol-eur
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trading-bot
      crypto: sol-eur
  template:
    metadata:
      labels:
        app: trading-bot
        crypto: sol-eur
    spec:
      containers:
      - name: trading-bot-container
        image: bitvavo-scalper:latest # Vervang dit door je eigen image
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /app/config.json
          name: config-volume
          subPath: SOL-EUR.json
        - mountPath: /app/data
          name: data-volume
        env:
        - name: CONFIG_FILE
          value: "/app/config.json"
      volumes:
      - name: config-volume
        configMap:
          name: trading-bot-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: trading-bot-data
---

# Deployment voor ETH-EUR
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-bot-eth-eur
  labels:
    app: trading-bot
    crypto: eth-eur
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trading-bot
      crypto: eth-eur
  template:
    metadata:
      labels:
        app: trading-bot
        crypto: eth-eur
    spec:
      containers:
      - name: trading-bot-container
        image: bitvavo-scalper:latest # Vervang dit door je eigen image
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /app/config.json
          name: config-volume
          subPath: ETH-EUR.json
        - mountPath: /app/data
          name: data-volume
        env:
        - name: CONFIG_FILE
          value: "/app/config.json"
      volumes:
      - name: config-volume
        configMap:
          name: trading-bot-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: trading-bot-data
---

# ConfigMap voor gedeelde configuratiebestanden
apiVersion: v1
kind: ConfigMap
metadata:
  name: trading-bot-config
data:
  BTC-EUR.json: |
    {
      "SYMBOL": "BTC-EUR",
      "THRESHOLD_BUY": 1.0,
      "THRESHOLD_SELL": 2.0,
      "STOP_LOSS": -0.7,
      "TRADE_AMOUNT": 0.005,
      "CHECK_INTERVAL": 10,
      "DEMO_MODE": true,
      "WINDOW_SIZE": 10
    }
  SOL-EUR.json: |
    {
      "SYMBOL": "SOL-EUR",
      "THRESHOLD_BUY": 1.5,
      "THRESHOLD_SELL": 2.5,
      "STOP_LOSS": -1.0,
      "TRADE_AMOUNT": 10,
      "CHECK_INTERVAL": 15,
      "DEMO_MODE": true,
      "WINDOW_SIZE": 20
    }
  ETH-EUR.json: |
    {
      "SYMBOL": "ETH-EUR",
      "THRESHOLD_BUY": 0.8,
      "THRESHOLD_SELL": 1.8,
      "STOP_LOSS": -0.5,
      "TRADE_AMOUNT": 0.1,
      "CHECK_INTERVAL": 20,
      "DEMO_MODE": true,
      "WINDOW_SIZE": 15
    }
---

# Persistent Volume Claim voor gedeelde data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: trading-bot-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi